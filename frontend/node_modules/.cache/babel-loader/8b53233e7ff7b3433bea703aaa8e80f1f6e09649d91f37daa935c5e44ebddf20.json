{"ast":null,"code":"var _jsxFileName = \"D:\\\\Student Enrollment System\\\\frontend\\\\src\\\\components\\\\EnrollmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/EnrollmentForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnrollmentForm = ({\n  students,\n  courses,\n  onSave\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    student_id: '',\n    course_id: ''\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.student_id) {\n      newErrors.student_id = 'Please select a student';\n    }\n    if (!formData.course_id) {\n      newErrors.course_id = 'Please select a course';\n    }\n    return newErrors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setErrors({});\n    try {\n      const response = await fetch('/api/enrollments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        setFormData({\n          student_id: '',\n          course_id: ''\n        });\n        onSave();\n        alert('Student enrolled successfully!');\n      } else {\n        const errorData = await response.json();\n        alert(`Error: ${errorData.error}`);\n      }\n    } catch (error) {\n      console.error('Error creating enrollment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enroll Student in Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Student:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"student_id\",\n          value: formData.student_id,\n          onChange: handleChange,\n          className: errors.student_id ? 'error' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: student.id,\n            children: [student.name, \" (\", student.email, \")\"]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), errors.student_id && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.student_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"course_id\",\n          value: formData.course_id,\n          onChange: handleChange,\n          className: errors.course_id ? 'error' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: course.id,\n            children: [course.course_name, \" (\", course.duration, \" weeks)\"]\n          }, course.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), errors.course_id && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.course_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enroll Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(EnrollmentForm, \"h2STonqy0pVPsa09c0l5C5G8x2Y=\");\n_c = EnrollmentForm;\nexport default EnrollmentForm;\nvar _c;\n$RefreshReg$(_c, \"EnrollmentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EnrollmentForm","students","courses","onSave","_s","formData","setFormData","student_id","course_id","errors","setErrors","handleChange","e","name","value","target","prev","validateForm","newErrors","handleSubmit","preventDefault","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","map","student","id","email","course","course_name","duration","type","_c","$RefreshReg$"],"sources":["D:/Student Enrollment System/frontend/src/components/EnrollmentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/EnrollmentForm.css';\r\n\r\nconst EnrollmentForm = ({ students, courses, onSave }) => {\r\n  const [formData, setFormData] = useState({\r\n    student_id: '',\r\n    course_id: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.student_id) {\r\n      newErrors.student_id = 'Please select a student';\r\n    }\r\n    \r\n    if (!formData.course_id) {\r\n      newErrors.course_id = 'Please select a course';\r\n    }\r\n    \r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const newErrors = validateForm();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n    \r\n    setErrors({});\r\n    \r\n    try {\r\n      const response = await fetch('/api/enrollments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setFormData({ student_id: '', course_id: '' });\r\n        onSave();\r\n        alert('Student enrolled successfully!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Error: ${errorData.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating enrollment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tab-content\">\r\n      <h2>Enroll Student in Course</h2>\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <div className=\"form-group\">\r\n          <label>Student:</label>\r\n          <select\r\n            name=\"student_id\"\r\n            value={formData.student_id}\r\n            onChange={handleChange}\r\n            className={errors.student_id ? 'error' : ''}\r\n          >\r\n            <option value=\"\">Select Student</option>\r\n            {students.map(student => (\r\n              <option key={student.id} value={student.id}>\r\n                {student.name} ({student.email})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.student_id && <span className=\"error-text\">{errors.student_id}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Course:</label>\r\n          <select\r\n            name=\"course_id\"\r\n            value={formData.course_id}\r\n            onChange={handleChange}\r\n            className={errors.course_id ? 'error' : ''}\r\n          >\r\n            <option value=\"\">Select Course</option>\r\n            {courses.map(course => (\r\n              <option key={course.id} value={course.id}>\r\n                {course.course_name} ({course.duration} weeks)\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.course_id && <span className=\"error-text\">{errors.course_id}</span>}\r\n        </div>\r\n        <button type=\"submit\">Enroll Student</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnrollmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}